{"componentChunkName":"component---src-templates-doc-js","path":"/cd/inclusions_explained","result":{"data":{"site":{"siteMetadata":{"title":"Operate First"}},"mdx":{"id":"0417ecce-a8ff-5c23-b4ec-24752cdd5158","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Inclusions explained\"), mdx(\"p\", null, \"It is likely that your team does not have \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"get\"), \" access to all namespace scoped resources.\\nThis can be an issue when deploying apps to a namespace in a cluster, because ArgoCD will\\nattempt to discover all namespace scoped resourced and be denied. To avoid this, we limit\\nArgoCD to discover the resources that are available to project admins, these should be added\\nunder the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"resource.inclusions\"), \" ArgoCD configurations in \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"manifests/overlays/<target_env>/configs/argo_cm/resource.inclusions\"), \".\"), mdx(\"p\", null, \"If your application contains resources that a project \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"admin\"), \" does not have permissions\\nto list/edit then you can request that a cluster admin deploy aggregated roles to add\\nsuch permissions. See here for an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/argoproj/argo-events/blob/master/manifests/cluster-install/rbac/argo-events-aggregate-to-admin.yaml\"\n  }), \"example\"), \".\"), mdx(\"p\", null, \"Once having done so, you can make a PR with these resources added onto the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"resource.inclusions\"), \"\\nlist.\"), mdx(\"h2\", null, \"Resources\"), mdx(\"p\", null, \"Read more about exclusion/inclusions \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://argoproj.github.io/argo-cd/operator-manual/declarative-setup/#resource-exclusioninclusion\"\n  }), \"here\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","description":null}}},"pageContext":{"id":"0417ecce-a8ff-5c23-b4ec-24752cdd5158","slug":"inclusions_explained"}},"staticQueryHashes":["117426894","3000541721"]}