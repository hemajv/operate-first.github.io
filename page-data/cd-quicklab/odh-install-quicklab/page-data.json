{"componentChunkName":"component---src-templates-doc-js","path":"/cd-quicklab/odh-install-quicklab","result":{"data":{"site":{"siteMetadata":{"title":"Operate First"}},"mdx":{"id":"e2fb27c8-5e67-5bad-baa4-db3f6b763f48","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Installing ODH using ArgoCD in Quicklab\"), mdx(\"p\", null, \"The steps for instalation in quicklab are basically the same as for \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/operate-first.github.io/76aeadf99ec2498a5f59ea8f3b37ac83/odh-install-crc.md\"\n  }), \"CRC\"), \".\"), mdx(\"p\", null, \"The only difference is that you need to use the correct URL for your cluster.\"), mdx(\"p\", null, \"In \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"./quicklab\"\n  }), \"quicklab guide\"), \" step 9 there\\u2019s a screenshot with the Hosts value and the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"oc login ...\"), \" command.\"), mdx(\"p\", null, \"Use the value (e.g. \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"upi-0.tcoufaltest.lab.upshift.rdu2.redhat.com:6443\"), \") as the value of the Cluster in steps \\u201CCreating the ODH operator\\u201D and \\u201CCreating the ODH deployment\\u201D in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/operate-first.github.io/76aeadf99ec2498a5f59ea8f3b37ac83/odh-install-crc.md\"\n  }), \"CRC\"), \".\"), mdx(\"p\", null, \"If you choose the to use command-line to create the Application resources,then edit \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"examples/odh-operator-app.yaml\"), \" and \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"examples/odh-deployment-app.yaml\"), \" and put the value of Cluster there.\"), mdx(\"p\", null, \"Except for the Cluster address the steps are exactly the same.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","description":null}}},"pageContext":{"id":"e2fb27c8-5e67-5bad-baa4-db3f6b763f48","slug":"odh-install-quicklab"}},"staticQueryHashes":["117426894","3000541721","3753692419"]}